24-09-13.21:06:31.656 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:11:21.657 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:15:37.870 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:16:25.741 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 44506ms for session id 0x10002720d190008
24-09-13.21:16:38.301 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190008 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 44506ms for session id 0x10002720d190008
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.21:16:55.789 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x10002720d190008 has expired
24-09-13.21:16:55.789 [main-EventThread] WARN  ConnectionState        - Session expired event received
24-09-13.21:16:55.790 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190008 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x10002720d190008 has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
24-09-13.21:19:31.079 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 154825ms for session id 0x10002720d190009
24-09-13.21:19:31.079 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190009 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 154825ms for session id 0x10002720d190009
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.21:19:32.734 [main-EventThread] WARN  ConnectionState        - Session expired event received
24-09-13.21:19:32.734 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x10002720d190009 has expired
24-09-13.21:19:32.734 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190009 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x10002720d190009 has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
24-09-13.21:23:26.083 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:29:44.774 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:32:06.462 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:33:41.260 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 80736ms for session id 0x10002720d19000d
24-09-13.21:33:41.260 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d19000d for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 80736ms for session id 0x10002720d19000d
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.21:33:42.480 [main-EventThread] WARN  ConnectionState        - Session expired event received
24-09-13.21:33:42.480 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x10002720d19000d has expired
24-09-13.21:33:42.480 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d19000d for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x10002720d19000d has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
24-09-13.21:34:11.811 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:34:42.285 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:46:58.748 [main            ] ERROR DynamicThreadPoolAutoConfig - error when load thread config data from zookeeper
24-09-13.21:46:58.749 [main            ] ERROR DynamicThreadPoolAutoConfig - error when load thread config data from zookeeper
24-09-13.21:47:01.695 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:48:10.541 [main            ] ERROR DynamicThreadPoolAutoConfig - error when load thread config data from zookeeper
24-09-13.21:48:10.550 [main            ] ERROR DynamicThreadPoolAutoConfig - error when load thread config data from zookeeper
24-09-13.21:48:13.510 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:51:38.842 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:54:53.123 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 65745ms for session id 0x10002720d190014
24-09-13.21:54:53.124 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190014 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 65745ms for session id 0x10002720d190014
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.21:54:54.909 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Unable to reconnect to ZooKeeper service, session 0x10002720d190014 has expired
24-09-13.21:54:54.909 [main-EventThread] WARN  ConnectionState        - Session expired event received
24-09-13.21:54:54.909 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190014 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionExpiredException: Unable to reconnect to ZooKeeper service, session 0x10002720d190014 has expired
	at org.apache.zookeeper.ClientCnxn$SendThread.onConnected(ClientCnxn.java:1406)
	at org.apache.zookeeper.ClientCnxnSocket.readConnectResult(ClientCnxnSocket.java:154)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:84)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:348)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1262)
24-09-13.21:54:58.930 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.21:56:32.994 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 28669ms for session id 0x10002720d190016
24-09-13.21:56:32.994 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190016 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 28669ms for session id 0x10002720d190016
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.21:56:51.971 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.22:51:51.782 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.22:53:25.100 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.22:54:08.160 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:01:18.647 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:02:38.513 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:04:04.689 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:07:20.226 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:08:17.331 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:10:32.082 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Client session timed out, have not heard from server in 30271ms for session id 0x10002720d190020
24-09-13.23:10:32.082 [main-SendThread(127.0.0.1:2181)] WARN  ClientCnxn             - Session 0x10002720d190020 for sever kubernetes.docker.internal/127.0.0.1:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
org.apache.zookeeper.ClientCnxn$SessionTimeoutException: Client session timed out, have not heard from server in 30271ms for session id 0x10002720d190020
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1230)
24-09-13.23:10:34.977 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:10:53.562 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:16:01.582 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:17:06.787 [main-EventThread] ERROR NodeCache              - 
java.lang.IllegalStateException: Expected state [STARTED] was [STOPPED]
	at org.apache.curator.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:823)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkState(CuratorFrameworkImpl.java:423)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkExists(CuratorFrameworkImpl.java:450)
	at org.apache.curator.framework.recipes.cache.NodeCache.reset(NodeCache.java:261)
	at org.apache.curator.framework.recipes.cache.NodeCache.access$100(NodeCache.java:60)
	at org.apache.curator.framework.recipes.cache.NodeCache$2.process(NodeCache.java:104)
	at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:77)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:576)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:551)
24-09-13.23:21:55.822 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:28:12.809 [main-EventThread] ERROR NodeCache              - 
java.lang.IllegalStateException: Expected state [STARTED] was [STOPPED]
	at org.apache.curator.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:823)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkState(CuratorFrameworkImpl.java:423)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkExists(CuratorFrameworkImpl.java:450)
	at org.apache.curator.framework.recipes.cache.NodeCache.reset(NodeCache.java:261)
	at org.apache.curator.framework.recipes.cache.NodeCache.access$100(NodeCache.java:60)
	at org.apache.curator.framework.recipes.cache.NodeCache$2.process(NodeCache.java:104)
	at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:77)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:576)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:551)
24-09-13.23:42:29.622 [main            ] WARN  LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
24-09-13.23:45:28.942 [main-EventThread] ERROR NodeCache              - 
java.lang.IllegalStateException: Expected state [STARTED] was [STOPPED]
	at org.apache.curator.shaded.com.google.common.base.Preconditions.checkState(Preconditions.java:823)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkState(CuratorFrameworkImpl.java:423)
	at org.apache.curator.framework.imps.CuratorFrameworkImpl.checkExists(CuratorFrameworkImpl.java:450)
	at org.apache.curator.framework.recipes.cache.NodeCache.reset(NodeCache.java:261)
	at org.apache.curator.framework.recipes.cache.NodeCache.access$100(NodeCache.java:60)
	at org.apache.curator.framework.recipes.cache.NodeCache$2.process(NodeCache.java:104)
	at org.apache.curator.framework.imps.NamespaceWatcher.process(NamespaceWatcher.java:77)
	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:576)
	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:551)
